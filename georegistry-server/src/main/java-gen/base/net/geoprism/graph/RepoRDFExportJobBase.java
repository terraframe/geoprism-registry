package net.geoprism.graph;

@com.runwaysdk.business.ClassSignature(hash = -27093653)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to RepoRDFExportJob.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class RepoRDFExportJobBase extends com.runwaysdk.system.scheduler.ExecutableJob
{
  public final static String CLASS = "net.geoprism.graph.RepoRDFExportJob";
  public final static java.lang.String BUSINESSEDGECODES = "businessEdgeCodes";
  public final static java.lang.String BUSINESSTYPECODES = "businessTypeCodes";
  public final static java.lang.String GEOMETRYEXPORTTYPE = "geometryExportType";
  public final static java.lang.String GOTCODES = "gotCodes";
  public final static java.lang.String GRAPHTYPECODES = "graphTypeCodes";
  public final static java.lang.String VALIDFOR = "validFor";
  @SuppressWarnings("unused")
  private static final long serialVersionUID = -27093653;
  
  public RepoRDFExportJobBase()
  {
    super();
  }
  
  public String getBusinessEdgeCodes()
  {
    return getValue(BUSINESSEDGECODES);
  }
  
  public void validateBusinessEdgeCodes()
  {
    this.validateAttribute(BUSINESSEDGECODES);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeTextDAOIF getBusinessEdgeCodesMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.graph.RepoRDFExportJob.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeTextDAOIF)mdClassIF.definesAttribute(BUSINESSEDGECODES);
  }
  
  public void setBusinessEdgeCodes(String value)
  {
    if(value == null)
    {
      setValue(BUSINESSEDGECODES, "");
    }
    else
    {
      setValue(BUSINESSEDGECODES, value);
    }
  }
  
  public String getBusinessTypeCodes()
  {
    return getValue(BUSINESSTYPECODES);
  }
  
  public void validateBusinessTypeCodes()
  {
    this.validateAttribute(BUSINESSTYPECODES);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeTextDAOIF getBusinessTypeCodesMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.graph.RepoRDFExportJob.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeTextDAOIF)mdClassIF.definesAttribute(BUSINESSTYPECODES);
  }
  
  public void setBusinessTypeCodes(String value)
  {
    if(value == null)
    {
      setValue(BUSINESSTYPECODES, "");
    }
    else
    {
      setValue(BUSINESSTYPECODES, value);
    }
  }
  
  public String getGeometryExportType()
  {
    return getValue(GEOMETRYEXPORTTYPE);
  }
  
  public void validateGeometryExportType()
  {
    this.validateAttribute(GEOMETRYEXPORTTYPE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeTextDAOIF getGeometryExportTypeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.graph.RepoRDFExportJob.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeTextDAOIF)mdClassIF.definesAttribute(GEOMETRYEXPORTTYPE);
  }
  
  public void setGeometryExportType(String value)
  {
    if(value == null)
    {
      setValue(GEOMETRYEXPORTTYPE, "");
    }
    else
    {
      setValue(GEOMETRYEXPORTTYPE, value);
    }
  }
  
  public String getGotCodes()
  {
    return getValue(GOTCODES);
  }
  
  public void validateGotCodes()
  {
    this.validateAttribute(GOTCODES);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeTextDAOIF getGotCodesMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.graph.RepoRDFExportJob.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeTextDAOIF)mdClassIF.definesAttribute(GOTCODES);
  }
  
  public void setGotCodes(String value)
  {
    if(value == null)
    {
      setValue(GOTCODES, "");
    }
    else
    {
      setValue(GOTCODES, value);
    }
  }
  
  public String getGraphTypeCodes()
  {
    return getValue(GRAPHTYPECODES);
  }
  
  public void validateGraphTypeCodes()
  {
    this.validateAttribute(GRAPHTYPECODES);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeTextDAOIF getGraphTypeCodesMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.graph.RepoRDFExportJob.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeTextDAOIF)mdClassIF.definesAttribute(GRAPHTYPECODES);
  }
  
  public void setGraphTypeCodes(String value)
  {
    if(value == null)
    {
      setValue(GRAPHTYPECODES, "");
    }
    else
    {
      setValue(GRAPHTYPECODES, value);
    }
  }
  
  public java.util.Date getValidFor()
  {
    return com.runwaysdk.constants.MdAttributeDateUtil.getTypeSafeValue(getValue(VALIDFOR));
  }
  
  public void validateValidFor()
  {
    this.validateAttribute(VALIDFOR);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDateDAOIF getValidForMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.graph.RepoRDFExportJob.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeDateDAOIF)mdClassIF.definesAttribute(VALIDFOR);
  }
  
  public void setValidFor(java.util.Date value)
  {
    if(value == null)
    {
      setValue(VALIDFOR, "");
    }
    else
    {
      setValue(VALIDFOR, new java.text.SimpleDateFormat(com.runwaysdk.constants.Constants.DATE_FORMAT).format(value));
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static RepoRDFExportJobQuery getAllInstances(String sortAttribute, Boolean ascending, Integer pageSize, Integer pageNumber)
  {
    RepoRDFExportJobQuery query = new RepoRDFExportJobQuery(new com.runwaysdk.query.QueryFactory());
    com.runwaysdk.business.Entity.getAllInstances(query, sortAttribute, ascending, pageSize, pageNumber);
    return query;
  }
  
  public static RepoRDFExportJob get(String oid)
  {
    return (RepoRDFExportJob) com.runwaysdk.business.Business.get(oid);
  }
  
  public static RepoRDFExportJob getByKey(String key)
  {
    return (RepoRDFExportJob) com.runwaysdk.business.Business.get(CLASS, key);
  }
  
  public static RepoRDFExportJob lock(java.lang.String oid)
  {
    RepoRDFExportJob _instance = RepoRDFExportJob.get(oid);
    _instance.lock();
    
    return _instance;
  }
  
  public static RepoRDFExportJob unlock(java.lang.String oid)
  {
    RepoRDFExportJob _instance = RepoRDFExportJob.get(oid);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
