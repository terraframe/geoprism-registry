<!--

    Copyright (c) 2019 TerraFrame, Inc. All rights reserved.

    This file is part of Geoprism Registry(tm).

    Geoprism Registry(tm) is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as
    published by the Free Software Foundation, either version 3 of the
    License, or (at your option) any later version.

    Geoprism Registry(tm) is distributed in the hope that it will be useful, but
    WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with Geoprism Registry(tm).  If not, see <http://www.gnu.org/licenses/>.

-->
<!-- Copyright (c) 2019 TerraFrame, Inc. All rights reserved. This file is part of Geoprism Registry(tm). Geoprism Registry(tm) is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. Geoprism Registry(tm) is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details. You should have received a copy of the GNU Lesser General Public License along with Geoprism Registry(tm). If not, see <http://www.gnu.org/licenses/>. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>net.geoprism</groupId>
    <artifactId>georegistry</artifactId>
    <version>0.17.2-SNAPSHOT</version>
  </parent>
  <artifactId>georegistry-test</artifactId>
  <packaging>war</packaging>

  <name>GeoRegistry Test</name>

  <properties>
    <!-- Specify your development root database credentials here. -->
    <root.db>postgres</root.db>
    <root.user>postgres</root.user>
    <root.pass>postgres</root.pass>

    <geoserver.version>2.5.0.1</geoserver.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>net.geoprism</groupId>
      <artifactId>georegistry-server</artifactId>
      <version>${project.version}</version>
      <exclusions>
        <exclusion> <!-- The oda jar includes runway properties files which cause issues. We probably want to remove these properties files from the oda jar but I don't know what else it will break. -->
          <groupId>net.geoprism</groupId>
          <artifactId>oda.driver</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>net.geoprism</groupId>
      <artifactId>georegistry-web</artifactId>
      <version>${project.version}</version>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>[4.13.1,)</version>
    </dependency>
    <dependency>
      <groupId>org.geoserver</groupId>
      <artifactId>geoserver</artifactId>
      <version>${geoserver.version}</version>
      <type>war</type>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>integration-test</id>
      <activation>
        <property>
          <name>integration-test</name>
        </property>
      </activation>
      <build>
        <plugins>
          <!-- Failsafe for running integration tests with JUNIT -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>2.12</version>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <version>1.4.15</version>
            <configuration>
              <container>
                <containerId>tomcat8x</containerId>
                <zipUrlInstaller>
                  <url>http://archive.apache.org/dist/tomcat/tomcat-8/v8.0.23/bin/apache-tomcat-8.0.23.zip</url>
                  <downloadDir>${project.build.directory}/downloads</downloadDir>
                  <extractDir>${project.build.directory}/extracts</extractDir>
                </zipUrlInstaller>
                <timeout>480000</timeout>
              </container>
              <configuration>
                <properties>
                  <cargo.servlet.port>8443</cargo.servlet.port>
                  <cargo.protocol>https</cargo.protocol>
                  <cargo.tomcat.connector.clientAuth>false</cargo.tomcat.connector.clientAuth>
                  <cargo.tomcat.connector.sslProtocol>TLS</cargo.tomcat.connector.sslProtocol>
                  <cargo.tomcat.connector.keystoreFile>/${project.basedir}/src/test/resources/keystore.ks</cargo.tomcat.connector.keystoreFile>
                  <cargo.tomcat.connector.keystorePass>2v8hVW2rPFncN6m</cargo.tomcat.connector.keystorePass>
                  <cargo.tomcat.connector.keyAlias>tomcat</cargo.tomcat.connector.keyAlias>
                  <cargo.tomcat.httpSecure>true</cargo.tomcat.httpSecure>
                  <cargo.jvmargs>
                    -Xmx5120M
                    -Dtomcat.home=/${project.basedir}/target/cargo/configurations/tomcat8x
                    -Djavax.net.ssl.keyStore=/${project.basedir}/src/test/resources/keystore.ks
                    -Djavax.net.ssl.keyStorePassword=2v8hVW2rPFncN6m
                    -Djavax.net.ssl.trustStore=/${project.basedir}/src/test/resources/tomcat.truststore
                    -Djavax.net.ssl.trustStorePassword=2v8hVW2rPFncN6m
                    -Djava.rmi.server.hostname=127.0.0.1
                    -Dbirt-server=true
                  </cargo.jvmargs>
                </properties>
              </configuration>
              <deployables>
                <deployable>
                  <groupId>net.geoprism</groupId>
                  <artifactId>georegistry-test</artifactId>
                  <type>war</type>
                  <properties>
                    <context>ROOT</context>
                  </properties>
                </deployable>
                <deployable>
                  <groupId>org.geoserver</groupId>
                  <artifactId>geoserver</artifactId>
                  <type>war</type>
                  <properties>
                    <context>geoserver</context>
                  </properties>
                </deployable>
              </deployables>
            </configuration>
            <executions>
              <execution>
                <id>start-tomcat</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>stop-tomcat</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <!-- <plugin> <groupId>com.github.eirslett</groupId> <artifactId>frontend-maven-plugin</artifactId> <version>0.0.14</version> <configuration> <installDirectory>node</installDirectory> <workingDirectory>target/georegistry-test-${project.version}</workingDirectory> </configuration> <executions> <execution> <id>install node and npm</id> <goals> <goal>install-node-and-npm</goal> </goals> <phase>pre-integration-test</phase> <configuration> <nodeVersion>v0.10.18</nodeVersion> <npmVersion>1.3.8</npmVersion> </configuration> </execution> <execution> <id>npm install</id> <goals> <goal>npm</goal> </goals> <phase>pre-integration-test</phase> </execution> <execution> <id>javascript tests</id> <goals> <goal>karma</goal> </goals> <phase>integration-test</phase> <configuration> <karmaConfPath>karma.conf.ci.js</karmaConfPath> 
            </configuration> </execution> </executions> </plugin> -->
        </plugins>
      </build>
    </profile>
    <profile>
      <id>front-end-test</id>
      <activation>
        <property>
          <name>front-end-test</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <version>0.0.14</version>
            <configuration>
              <installDirectory>node</installDirectory>
              <workingDirectory>target/georegistry-test-${project.version}</workingDirectory>
            </configuration>
            <executions>

              <!-- 1. Install node and npm locally -->
              <execution>
                <id>install node and npm</id>
                <goals>
                  <goal>install-node-and-npm</goal>
                </goals>
                <phase>pre-integration-test</phase>
                <configuration>
                  <nodeVersion>v0.10.18</nodeVersion>
                  <npmVersion>1.3.8</npmVersion>
                </configuration>
              </execution>

              <!-- 2. Install karma and karma plugins -->
              <execution>
                <id>npm install</id>
                <goals>
                  <goal>npm</goal>
                </goals>
                <phase>pre-integration-test</phase>
              </execution>

              <!-- 3. Run karma tests -->
              <execution>
                <id>javascript tests</id>
                <goals>
                  <goal>karma</goal>
                </goals>
                <phase>integration-test</phase>
                <configuration>
                  <karmaConfPath>karma.conf.js</karmaConfPath>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>cargo-run-georegistry-test</id>
      <activation>
        <property>
          <name>cargo-run-georegistry-test</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <version>1.4.15</version>
            <configuration>
              <container>
                <containerId>tomcat8x</containerId>
                <artifactInstaller>
                  <groupId>org.apache.tomcat</groupId>
                  <artifactId>tomcat</artifactId>
                  <version>8.0.23</version>
                </artifactInstaller>
                <timeout>4800000</timeout>
              </container>
              <configuration>
                <properties>
                  <cargo.servlet.port>8443</cargo.servlet.port>
                  <cargo.protocol>https</cargo.protocol>
                  <cargo.tomcat.connector.clientAuth>false</cargo.tomcat.connector.clientAuth>
                  <cargo.tomcat.connector.sslProtocol>TLS</cargo.tomcat.connector.sslProtocol>
                  <cargo.tomcat.connector.keystoreFile>/${project.basedir}/src/test/resources/keystore.ks</cargo.tomcat.connector.keystoreFile>
                  <cargo.tomcat.connector.keystorePass>2v8hVW2rPFncN6m</cargo.tomcat.connector.keystorePass>
                  <cargo.tomcat.connector.keyAlias>tomcat</cargo.tomcat.connector.keyAlias>
                  <cargo.tomcat.httpSecure>true</cargo.tomcat.httpSecure>
                  <cargo.jvmargs>
                    -Xmx5120M
                    -Xdebug
                    -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000
                    -Dtomcat.home=/${project.basedir}/target/cargo/configurations/tomcat8x
                    -Djavax.net.ssl.keyStore=/${project.basedir}/src/test/resources/keystore.ks
                    -Djavax.net.ssl.keyStorePassword=2v8hVW2rPFncN6m
                    -Djavax.net.ssl.trustStore=/${project.basedir}/src/test/resources/tomcat.truststore
                    -Djavax.net.ssl.trustStorePassword=2v8hVW2rPFncN6m
                    -Djava.rmi.server.hostname=127.0.0.1
                    -Dbirt-server=true
                    -Denvcfg=${project.basedir}/../envcfg
                  </cargo.jvmargs>
                </properties>
              </configuration>
              <deployables>
                <deployable>
                  <groupId>net.geoprism</groupId>
                  <artifactId>georegistry-test</artifactId>
                  <type>war</type>
                  <properties>
                    <context>georegistry</context>
                  </properties>
                </deployable>
                <deployable>
                  <groupId>org.geoserver</groupId>
                  <artifactId>geoserver</artifactId>
                  <type>war</type>
                  <properties>
                    <context>geoserver</context>
                  </properties>
                </deployable>
              </deployables>
            </configuration>
            <executions>
              <execution>
                <id>cargo-run</id>
                <phase>verify</phase>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
        </configuration>
      </plugin>
      <!-- Weave Aspects -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>aspectj-maven-plugin</artifactId>
        <version>${aspectj.plugin.version}</version>
        <dependencies>
          <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjtools</artifactId>
            <version>${aspectj.version}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>test-compile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <aspectLibraries>
            <aspectLibrary>
              <groupId>com.runwaysdk</groupId>
              <artifactId>runwaysdk-server</artifactId>
            </aspectLibrary>
          </aspectLibraries>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
          <complianceLevel>${maven.compiler.target}</complianceLevel>
          <fork>true</fork>
          <meminitial>512m</meminitial>
          <maxmem>1024m</maxmem>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <packagingExcludes>
            **/catalina*.jar,
            **/servlet-api*.jar,
            **/annotations-api*.jar
          </packagingExcludes>
          <overlays>
            <overlay>
            </overlay>
            <overlay>
              <groupId>net.geoprism</groupId>
              <artifactId>georegistry-web</artifactId>
            </overlay>
          </overlays>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
